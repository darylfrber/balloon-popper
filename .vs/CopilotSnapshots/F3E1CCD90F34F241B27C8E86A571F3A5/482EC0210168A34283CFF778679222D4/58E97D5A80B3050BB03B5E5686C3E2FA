using UnityEngine;

namespace BalloonBuster.Core
{
    public enum GameState
    {
        Boot,
        Menu,
        Playing,
        Paused,
        GameOver
    }

    public class GameManager : MonoBehaviour
    {
        public static GameManager Instance { get; private set; }
        public GameState State { get; private set; } = GameState.Boot;

        [SerializeField] private LevelManager levelManager;
        [SerializeField] private ScoreManager scoreManager;

        private void Awake()
        {
            if (Instance != null && Instance != this)
            {
                Destroy(gameObject);
                return;
            }
            Instance = this;
            DontDestroyOnLoad(gameObject);
        }

        private void Start()
        {
            GoToMenu();
        }

        public void GoToMenu()
        {
            State = GameState.Menu;
            scoreManager.ResetScore();
        }

        public void StartGame(LevelConfigSO levelConfig)
        {
            scoreManager.ResetScore();
            levelManager.LoadLevel(levelConfig);
            State = GameState.Playing;
        }

        public void GameOver()
        {
            if (State != GameState.Playing) return;
            State = GameState.GameOver;
            levelManager.StopLevel();
            // TODO: show game over UI
        }

        public void AddScore(int amount)
        {
            scoreManager.Add(amount);
        }
    }
}
